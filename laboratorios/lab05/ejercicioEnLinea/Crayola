import java.util.*;
import java.io.*;
public class Crayola
{
    public boolean lectura(){
        try{
           File archivo = new File("C:/Users/Camilo/Documents/Documents/Eafit/Semestre II/Estructura de Datos y Algoritmos/Laboratorios/Lab 05/Punto 2/bicolorable.txt");
           Scanner scan = new Scanner(archivo);
           int numeroNodos = Integer.parseInt(scan.nextLine());
           int numeroEnlaces =  Integer.parseInt(scan.nextLine());
           String[] enlaces = new String[numeroEnlaces];
           LinkedList<Nodo>[] grafo = new LinkedList[numeroNodos];
           int i=0;
           while(scan.hasNextLine() == true){
               String linea = scan.nextLine();
               enlaces[i] = linea;
               i++;
           }
           for(int j=0; j<numeroNodos; j++){
               Nodo nodo = new Nodo(j, false);
               grafo[j] = new LinkedList<Nodo>();
               grafo[j].add(nodo);
           }
           for(int n=0; n<numeroNodos; n++){
              for(int j=0; j<enlaces.length; j++){
                  String l = enlaces[j];
                  Scanner s = new Scanner(l);
                  s.useDelimiter(" ");
                if(s.nextInt() == n){
                   int m = s.nextInt();
                   grafo[n].add(grafo[m].getFirst());
                }
              }
           }
           Nodo nodo = new Nodo(0, false);
           boolean[] visitados = new boolean[grafo.length];
           return bicolor(grafo, visitados, nodo);
        }
        catch(FileNotFoundException e){}
        return false;
    }
    
    public boolean bicolor(LinkedList[] grafo, boolean[] visitados, Nodo nodo){
        for(int i=0; i<grafo.length; i++){
            LinkedList<Nodo>lista = grafo[i];
            LinkedList<Nodo>lista1 = new LinkedList<>();
            Nodo n = lista.poll();
            Nodo m;
            while((m = lista.poll()) != null ){
                if(n.color == true && m.color == true){
                    return false;
                }
                if(n.color == false){
                    m.color = true;
                }
            }
        }
        return true;
    }
}
